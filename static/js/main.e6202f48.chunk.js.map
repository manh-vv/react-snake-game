{"version":3,"sources":["game/Point.js","game/config.js","game/utils.js","game/Food.js","game/GameFrame.js","game/Snake.js","App.js","serviceWorker.js","index.js"],"names":["Point","x","y","this","stepX","stepY","SCREEN","w","h","interval","DIR","SNAKE","random","min","max","Math","floor","randomLoc","size","Food","location","loc","eated","ctx","fillStyle","fillRect","GameFrame","containerEl","gridSize","objects","state","container","init","paintStyle","getComputedStyle","canvas","document","createElement","getContext","width","parseInt","getPropertyValue","height","tabIndex","autofocus","onkeydown","e","onKeyDown","setAttribute","appendChild","lineWidth","strokeStyle","drawLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","clearRect","update","obj","t0","Date","now","clear","showGrid","dt","Error","t","setTimeout","gameFrame","push","Snake","food","head","curDir","step","speed","_isDeath","tails","onScoreChange","length","p","isDeath","tP","clone","move","console","info","handleEat","shift","debug","key","log","v","stop","start","onDeath","App","useRef","useState","score","setScore","setIsDeath","snake","useEffect","current","s","addObject","id","ref","onClick","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6202f48.chunk.js","sourcesContent":["export class Point {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  move(stepX, stepY) {\n    this.x += stepX;\n    this.y += stepY;\n    return this;\n  }\n\n  clone() {\n    return new Point(this.x, this.y);\n  }\n}\n","export const SIZE = 20;\n\nexport const SCREEN = {\n  w: 600,\n  h: 400,\n  \n  /**\n   * 20ms 1 update mean 1000 / 20 = 50 frame per second\n   */\n  interval: 20,\n};\n\nexport const DIR = {\n  LR: [1, 0],\n  RL: [-1, 0],\n  TB: [0, 1],\n  BT: [0, -1],\n};\n\nexport const SNAKE = {\n  speed: 300,\n  step: SIZE,\n}","import { Point } from './Point';\nimport { SIZE } from './config';\n\nexport function random(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function randomLoc(max, size = SIZE) {\n  let x = random(size, max - size);\n  x -= x % size;\n  let y = random(size, max - size);\n  y -= y % size;\n\n  return new Point(x, y);\n}\n","import { randomLoc } from './utils';\nimport { SIZE, SCREEN } from './config';\n\nexport class Food {\n  constructor(location, size = SIZE) {\n    this.loc = location;\n    this.size = size;\n\n    if (!this.loc) {\n      this.eated();\n    }\n  }\n\n  eated() {\n    this.loc = randomLoc(Math.min(SCREEN.w, SCREEN.h), SIZE);\n  }\n\n  update(ctx) {\n    ctx.fillStyle = '#ff0000';\n    ctx.fillRect(this.loc.x, this.loc.y, this.size, this.size);\n  }\n}\n","import { SCREEN, SIZE } from './config';\n\nexport class GameFrame {\n  gridSize = SIZE;\n  interval = SCREEN.interval;\n\n  objects = [];\n\n  /**\n   * 0 stop\n   * 1 playing\n   * 2 pause\n   */\n  state = 0;\n\n  constructor(containerEl) {\n    this.container = containerEl;\n    this.init();\n  }\n\n  init() {\n    if (!this.container) return;\n    const paintStyle = getComputedStyle(this.container);\n\n    const canvas = document.createElement('canvas');\n    this.canvas = canvas;\n    this.ctx = canvas.getContext('2d');\n\n    canvas.width = SCREEN.w = parseInt(paintStyle.getPropertyValue('width'));\n    canvas.height = SCREEN.h = parseInt(paintStyle.getPropertyValue('height'));\n    canvas.tabIndex = 1;\n    canvas.autofocus = true;\n    canvas.onkeydown = (e) => this.onKeyDown(e);\n\n    canvas.setAttribute('style', 'border: 1px dotted gray;');\n\n    this.container.appendChild(canvas);\n  }\n\n  showGrid() {\n    this.ctx.lineWidth = 1;\n    this.ctx.strokeStyle = '#000000';\n\n    for (let x = this.gridSize; x < this.canvas.width; x += this.gridSize) {\n      this.drawLine(x, 0, x, this.canvas.height);\n    }\n\n    for (let y = this.gridSize; y < this.canvas.height; y += this.gridSize) {\n      this.drawLine(0, y, this.canvas.width, y);\n    }\n  }\n\n  drawLine(x1, y1, x2, y2) {\n    const ctx = this.ctx;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  start(interval = SCREEN.interval) {\n    this.state = 1;\n    this.interval = interval;\n    this.update();\n  }\n\n  stop() {\n    this.state = 0;\n  }\n\n  onKeyDown(e) {\n    for (const obj of this.objects) {\n      if (typeof obj['onKeyDown'] == 'function') {\n        obj.onKeyDown(e, this);\n      }\n    }\n  }\n\n  update() {\n    const t0 = Date.now();\n    this.clear();\n    this.showGrid();\n\n    for (const obj of this.objects) {\n      obj.update(this.ctx);\n    }\n\n    const dt = Date.now() - t0;\n\n    if (dt > this.interval) {\n      throw new Error(`Interval is too short for update: ${dt}`);\n    }\n\n    const t = this.interval - dt;\n    // console.info(`Game will be updated in ${t}ms.`);\n    if (this.state === 1) {\n      setTimeout(() => this.update(), t);\n    }\n  }\n\n  addObject(obj) {\n    obj.gameFrame = this;\n    this.objects.push(obj);\n  }\n}\n","import { DIR, SCREEN, SIZE, SNAKE } from './config';\nimport { randomLoc } from './utils';\n\nexport class Snake {\n  head = randomLoc(Math.min(SCREEN.w, SCREEN.h), SIZE);\n  size = SIZE;\n  curDir = DIR.LR;\n  step = SNAKE.step;\n  speed = SNAKE.speed;\n  _isDeath = false;\n  tails = [];\n\n  constructor(food, head) {\n    if (head) {\n      this.head = head;\n    }\n    this.food = food;\n  }\n\n  set isDeath(v) {\n    this._isDeath = v;\n    if (v) {\n      this.gameFrame.stop();\n    } else {\n      this.gameFrame.start();\n    }\n\n    if (typeof this.onDeath == 'function') {\n      this.onDeath(v);\n    }\n  }\n\n  get isDeath() {\n    return this._isDeath;\n  }\n\n  handleEat(h) {\n    this.tails.push(this.head);\n    this.head = h;\n\n    if (typeof this.onScoreChange == 'function') {\n    this.onScoreChange(this.tails.length);\n    }\n  }\n\n  update(ctx) {\n    ctx.fillStyle = '#00CC99';\n\n    for (const p of this.tails) {\n      ctx.fillRect(p.x, p.y, this.size, this.size);\n    }\n\n    ctx.fillRect(this.head.x, this.head.y, this.size, this.size);\n  }\n\n  move() {\n    if (this.isDeath) return;\n\n    const tP = this.head.clone().move(this.curDir[0] * this.step, this.curDir[1] * this.step);\n    // check alive\n    this.isDeath =\n      0 > tP.x || tP.x > SCREEN.w - this.step || 0 > tP.y || tP.y > SCREEN.h - this.step;\n\n    if (this.isDeath) {\n      console.info('The snake is death');\n      return;\n    }\n\n    if (tP.x === this.food.loc.x && tP.y === this.food.loc.y) {\n      this.handleEat(this.food.loc.clone());\n      this.food.eated();\n    } else {\n      this.tails.push(this.head.clone());\n      this.tails.shift();\n      this.head.move(this.curDir[0] * this.step, this.curDir[1] * this.step);\n    }\n\n    setTimeout(() => this.move(), this.speed);\n  }\n\n  onKeyDown(e) {\n    console.debug('hit key:', e.key);\n\n    switch (e.key) {\n      case 'ArrowDown':\n        this.curDir = DIR.TB;\n        break;\n      case 'ArrowUp':\n        this.curDir = DIR.BT;\n        break;\n      case 'ArrowRight':\n        this.curDir = DIR.LR;\n        break;\n      case 'ArrowLeft':\n        this.curDir = DIR.RL;\n        break;\n      case 'c':\n        this.isDeath = false;\n        this.move();\n        break;\n      default:\n        console.log('-- unknown key:', e.key);\n        return;\n    }\n  }\n}\n","import './App.css';\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { Food } from './game/Food';\nimport { GameFrame } from './game/GameFrame';\nimport { Snake } from './game/Snake';\n\nfunction App() {\n  const container = useRef();\n  const [score, setScore] = useState(0);\n  const [isDeath, setIsDeath] = useState(false);\n  const [snake] = useState(new Snake());\n  \n  useEffect(() => {\n    const gameFrame = new GameFrame(container.current);\n    // snake need to know where is food placed\n    snake.food = new Food();\n\n    snake.onScoreChange = (s) => setScore(s);\n    snake.onDeath = (v) => setIsDeath(v);\n\n    gameFrame.addObject(snake);\n    gameFrame.addObject(snake.food);\n\n    gameFrame.start();\n    snake.move();\n  }, [snake]);\n\n  const handleReset = () => {\n    snake.tails = [];\n    setScore(0);\n  };\n\n  return (\n    <>\n      <div id=\"game-container\" ref={container}></div>\n\n      <div>\n        <span>Score:</span> <span>{score}</span>\n      </div>\n\n      <div>\n        <span>Is death:</span> <span>{isDeath ? 'TRUE' : 'FALSE'}</span>\n      </div>\n\n      <div>\n        <button onClick={handleReset}>\n          Reset\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}